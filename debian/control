Source: dh-dist-zilla
Section: devel
Priority: optional
Maintainer: Elmar S. Heeb <elmar@heebs.ch>
Uploaders: Axel Beckert <abe@debian.org>
Build-Depends: debhelper-compat (= 13),
               libdist-zilla-perl <!nocheck>,
               libtest-strict-perl <!nocheck>,
               libtest-script-run-perl <!nocheck>
Standards-Version: 4.5.1
Vcs-Git: https://github.com/elmar/dh-dist-zilla.git
Vcs-Browser: https://github.com/elmar/dh-dist-zilla
Homepage: https://github.com/elmar/dh-dist-zilla
Rules-Requires-Root: no
Testsuite: autopkgtest-pkg-perl

Package: dh-dist-zilla
Provides: dh-sequence-dist-zilla
Architecture: all
Multi-Arch: foreign
Depends: debhelper (>= 7),
         debhelper (<< 10.10.6~) | debhelper (>= 11.1.3~),
         libdist-zilla-perl,
         ${misc:Depends},
         ${perl:Depends}
Recommends: devscripts
Suggests: libdist-zilla-app-command-authordebs-perl,
          pristine-tar,
          xz-utils
Enhances: debhelper,
          libdist-zilla-perl
Description: debhelper add-on to call dzil build and clean up after the build
 dh-dist-zilla provides a debhelper sequence addon named 'dist_zilla',
 i.e. you can use it in your project's debian/rules as "dh $@ --with
 dist-zilla".
 .
 The intention is to be able to build Debian Perl packages directly
 from a Dist::Zilla based Perl distributions without generating the
 CPAN distribution tar-ball manually first.  It is analogous to using
 autoreconf to generate the configure script.
 .
 The orig.tar.gz/.xz file must only contain the dist.ini and source
 files but not the generated files like META.yml, README, etc. If you
 use dh-dist-zilla, you can use "debian/rules get-orig-source" to
 generate a conforming upstream tar ball if none is available yet.
